<?xml version="1.0"?>


<!DOCTYPE rdf:RDF [
    <!ENTITY owl "http://www.w3.org/2002/07/owl#" >
    <!ENTITY swrl "http://www.w3.org/2003/11/swrl#" >
    <!ENTITY dc "http://purl.org/dc/elements/1.1/" >
    <!ENTITY swrlb "http://www.w3.org/2003/11/swrlb#" >
    <!ENTITY about "http://www.essepuntato.it/about/" >
    <!ENTITY xsd "http://www.w3.org/2001/XMLSchema#" >
    <!ENTITY owlapi "http://www.semanticweb.org/owlapi#" >
    <!ENTITY rdfs "http://www.w3.org/2000/01/rdf-schema#" >
    <!ENTITY rdf "http://www.w3.org/1999/02/22-rdf-syntax-ns#" >
    <!ENTITY literalreification "http://www.essepuntato.it/2010/06/literalreification/" >
    <!ENTITY region "http://www.ontologydesignpatterns.org/cp/owl/region.owl#" >
    <!ENTITY cpannotationschema "http://www.ontologydesignpatterns.org/schemas/cpannotationschema.owl#" >
]>


<rdf:RDF xmlns="http://www.essepuntato.it/2010/06/literalreification#"
     xml:base="http://www.essepuntato.it/2010/06/literalreification"
     xmlns:region="http://www.ontologydesignpatterns.org/cp/owl/region.owl#"
     xmlns:dc="http://purl.org/dc/elements/1.1/"
     xmlns:about="http://www.essepuntato.it/about/"
     xmlns:owlapi="http://www.semanticweb.org/owlapi#"
     xmlns:literalreification="http://www.essepuntato.it/2010/06/literalreification/"
     xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#"
     xmlns:swrl="http://www.w3.org/2003/11/swrl#"
     xmlns:cpannotationschema="http://www.ontologydesignpatterns.org/schemas/cpannotationschema.owl#"
     xmlns:xsd="http://www.w3.org/2001/XMLSchema#"
     xmlns:owl="http://www.w3.org/2002/07/owl#"
     xmlns:swrlb="http://www.w3.org/2003/11/swrlb#"
     xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
    <owl:Ontology rdf:about="http://www.essepuntato.it/2010/06/literalreification">
        <dc:creator rdf:datatype="&xsd;string">Aldo Gangemi</dc:creator>
        <dc:creator rdf:datatype="&xsd;string">Fabio Vitali</dc:creator>
        <cpannotationschema:hasComponent rdf:datatype="&xsd;anyURI">http://www.ontologydesignpatterns.org/cp/owl/region.owl</cpannotationschema:hasComponent>
        <cpannotationschema:isSpecializationOf rdf:datatype="&xsd;anyURI">http://www.ontologydesignpatterns.org/cp/owl/region.owl</cpannotationschema:isSpecializationOf>
        <cpannotationschema:relatedCPs rdf:datatype="&xsd;anyURI">http://www.ontologydesignpatterns.org/cp/owl/region.owl</cpannotationschema:relatedCPs>
        <cpannotationschema:scenarios xml:lang="en">From a Web 2.0 point of view, a tag is a non-hierarchical keyword (e.g., a string) assigned to a piece of information, such as a web document. A particular tag can have more than one meaning according to the context in which it is specified. Let us consider the following two article from Wikipedia:
1) http://en.wikipedia.org/wiki/Ulysses_%28novel%29
2) http://en.wikipedia.org/wiki/Paris_Hilton

The tag &#39;Paris&#39; can be added to both articles, of course, but it brings with itself two different meanings, even though it is exactly the same string that has been used. In the above example, we want to say that &#39;Paris&#39; is a first name of the person document 2) is about (i.e., Paris Hilton), while in document 1) &#39;Paris&#39; is the name of the city in which the subject of the document (the novel &#39;Ulysses&#39; by James Joyce) was published the very first time.

Using the reified literal pattern, we can express tags as proper individuals of the class &#39;Literal&#39; (or of a specific subclass of it, such as &#39;Tag&#39;), connecting them when refer to the same literal value. Writing the previous example down in a Turtle format, we could have:

&lt;http://en.wikipedia.org/wiki/Ulysses_%28novel%29&gt; a foaf:Document
	; prism:keyword :parisTag1 .
	
&lt;http://en.wikipedia.org/wiki/Paris_Hilton&gt; a foaf:Document
	; prism:keyword :parisTag2 .
	
:parisTag1 a litre:Literal
	; litre:hasLiteralValue &quot;Paris&quot;
	; a [ a skos:Concept
			; skos:definition &quot;the name associated to a particular city&quot;@en ] .
			
:parisTag2 a litre:Literal
	; litre:hasSameLiteralValueOf :parisTag1
	; a [ a skos:Concept
			; skos:definition &quot;the first name of a person&quot;@en ] .</cpannotationschema:scenarios>
        <cpannotationschema:hasUnitTest xml:lang="en">SELECT DISTINCT ?entity ?property
WHERE {
	?literal a litre:Literal .
	{ ?literal ?property ?entity } UNION { ?entity ?property ?literal }
}</cpannotationschema:hasUnitTest>
        <cpannotationschema:hasIntent xml:lang="en">The goal of this pattern is to allow the reification of literal values within OWL.</cpannotationschema:hasIntent>
        <cpannotationschema:coversRequirements xml:lang="en">What is the context in which entities refer to a particular literal value?
What are the meanings of a particular value considering the context in which it is used?</cpannotationschema:coversRequirements>
        <owl:versionIRI rdf:resource="http://www.essepuntato.it/2010/06/literalreification"/>
        <dc:creator rdf:resource="&about;me"/>
        <owl:imports rdf:resource="http://www.ontologydesignpatterns.org/cp/owl/region.owl"/>
        <owl:imports rdf:resource="http://www.ontologydesignpatterns.org/schemas/cpannotationschema.owl"/>
    </owl:Ontology>
    


    <!-- 
    ///////////////////////////////////////////////////////////////////////////////////////
    //
    // Annotation properties
    //
    ///////////////////////////////////////////////////////////////////////////////////////
     -->

    <owl:AnnotationProperty rdf:about="&dc;creator"/>
    <owl:AnnotationProperty rdf:about="&cpannotationschema;scenarios"/>
    <owl:AnnotationProperty rdf:about="&cpannotationschema;hasUnitTest"/>
    <owl:AnnotationProperty rdf:about="&cpannotationschema;hasComponent"/>
    <owl:AnnotationProperty rdf:about="&cpannotationschema;coversRequirements"/>
    <owl:AnnotationProperty rdf:about="&cpannotationschema;hasIntent"/>
    <owl:AnnotationProperty rdf:about="&cpannotationschema;isSpecializationOf"/>
    <owl:AnnotationProperty rdf:about="&rdfs;label"/>
    <owl:AnnotationProperty rdf:about="&owlapi;nodeID"/>
    <owl:AnnotationProperty rdf:about="&rdfs;comment"/>
    <owl:AnnotationProperty rdf:about="&dc;contributor"/>
    <owl:AnnotationProperty rdf:about="&cpannotationschema;relatedCPs"/>
    


    <!-- 
    ///////////////////////////////////////////////////////////////////////////////////////
    //
    // Object Properties
    //
    ///////////////////////////////////////////////////////////////////////////////////////
     -->

    


    <!-- http://www.essepuntato.it/2010/06/literalreification/hasLiteral -->

    <owl:ObjectProperty rdf:about="&literalreification;hasLiteral">
        <rdfs:label xml:lang="en">has literal</rdfs:label>
        <rdfs:comment xml:lang="en">This property allows to specify a reified literal for a particular individual.</rdfs:comment>
        <rdfs:range rdf:resource="&literalreification;Literal"/>
        <owl:inverseOf rdf:resource="&literalreification;isLiteralOf"/>
        <rdfs:subPropertyOf rdf:resource="&region;hasRegion"/>
    </owl:ObjectProperty>
    


    <!-- http://www.essepuntato.it/2010/06/literalreification/hasSameLiteralValueOf -->

    <owl:ObjectProperty rdf:about="&literalreification;hasSameLiteralValueOf">
        <rdf:type rdf:resource="&owl;SymmetricProperty"/>
        <rdf:type rdf:resource="&owl;TransitiveProperty"/>
        <rdfs:label xml:lang="en">has same literal value of</rdfs:label>
        <rdfs:comment xml:lang="en">This property relates any reified literal to another one that shares the same literal value.

Apart from being a transitive and reflexive property, it is used as part of the head of a SWRL rule (specified within the ontology) that says the following:

hasSameLiteralValueOf(x,y) ^ hasLiteralValue(y,v) -&gt; hasLiteralValue(x,v)

Note that connecting two reified literals, that specify different values as object of their &quot;hasLiteralValue&quot; assertions, thorugh a &quot;hasSameLiteralValueOf&quot; assertion results in making the ontology inconsistent.</rdfs:comment>
        <rdfs:range rdf:resource="&literalreification;Literal"/>
        <rdfs:domain rdf:resource="&literalreification;Literal"/>
        <rdfs:subPropertyOf rdf:resource="&owl;topObjectProperty"/>
    </owl:ObjectProperty>
    


    <!-- http://www.essepuntato.it/2010/06/literalreification/isLiteralOf -->

    <owl:ObjectProperty rdf:about="&literalreification;isLiteralOf">
        <rdfs:label xml:lang="en">is literal of</rdfs:label>
        <rdfs:comment xml:lang="en">This property allows to specify which are the individuals that use a particular reified literal.</rdfs:comment>
        <rdfs:domain rdf:resource="&literalreification;Literal"/>
        <rdfs:subPropertyOf rdf:resource="&region;isRegionFor"/>
    </owl:ObjectProperty>
    


    <!-- http://www.ontologydesignpatterns.org/cp/owl/region.owl#hasRegion -->

    <owl:ObjectProperty rdf:about="&region;hasRegion"/>
    


    <!-- http://www.ontologydesignpatterns.org/cp/owl/region.owl#isRegionFor -->

    <owl:ObjectProperty rdf:about="&region;isRegionFor"/>
    


    <!-- http://www.w3.org/2002/07/owl#topObjectProperty -->

    <owl:ObjectProperty rdf:about="&owl;topObjectProperty"/>
    


    <!-- 
    ///////////////////////////////////////////////////////////////////////////////////////
    //
    // Data properties
    //
    ///////////////////////////////////////////////////////////////////////////////////////
     -->

    


    <!-- http://www.essepuntato.it/2010/06/literalreification/hasLiteralValue -->

    <owl:DatatypeProperty rdf:about="&literalreification;hasLiteralValue">
        <rdf:type rdf:resource="&owl;FunctionalProperty"/>
        <rdfs:label xml:lang="en">has literal value</rdfs:label>
        <rdfs:comment xml:lang="en">This property is used to specify the literal value an individual of &#39;Literal&#39; represents.</rdfs:comment>
        <rdfs:domain rdf:resource="&literalreification;Literal"/>
        <rdfs:subPropertyOf rdf:resource="&region;hasRegionDataValue"/>
        <rdfs:range rdf:resource="&rdfs;Literal"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.ontologydesignpatterns.org/cp/owl/region.owl#hasRegionDataValue -->

    <owl:DatatypeProperty rdf:about="&region;hasRegionDataValue"/>
    


    <!-- 
    ///////////////////////////////////////////////////////////////////////////////////////
    //
    // Classes
    //
    ///////////////////////////////////////////////////////////////////////////////////////
     -->

    


    <!-- http://www.essepuntato.it/2010/06/literalreification/Literal -->

    <owl:Class rdf:about="&literalreification;Literal">
        <rdfs:label xml:lang="en">literal</rdfs:label>
        <rdfs:subClassOf rdf:resource="&region;Region"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&literalreification;hasLiteralValue"/>
                <owl:cardinality rdf:datatype="&xsd;nonNegativeInteger">1</owl:cardinality>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:comment xml:lang="en">This class describes individuals standing for reified literals, definying the value they represent by using the property &#39;hasLiteralValue&#39;. Note that each individual of this class has always a value specified.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.ontologydesignpatterns.org/cp/owl/region.owl#Region -->

    <owl:Class rdf:about="&region;Region"/>
    


    <!-- 
    ///////////////////////////////////////////////////////////////////////////////////////
    //
    // Individuals
    //
    ///////////////////////////////////////////////////////////////////////////////////////
     -->

    


    <!-- http://www.essepuntato.it/about/me -->

    <owl:NamedIndividual rdf:about="&about;me"/>
    


    <!-- 
    ///////////////////////////////////////////////////////////////////////////////////////
    //
    // Rules
    //
    ///////////////////////////////////////////////////////////////////////////////////////
     -->

    <swrl:Variable rdf:about="urn:swrl#x"/>
    <swrl:Variable rdf:about="urn:swrl#y"/>
    <swrl:Variable rdf:about="urn:swrl#v"/>
    <swrl:Imp>
        <swrl:head>
            <swrl:AtomList>
                <rdf:rest rdf:resource="&rdf;nil"/>
                <rdf:first>
                    <swrl:DatavaluedPropertyAtom>
                        <swrl:propertyPredicate rdf:resource="&literalreification;hasLiteralValue"/>
                        <swrl:argument2 rdf:resource="urn:swrl#v"/>
                        <swrl:argument1 rdf:resource="urn:swrl#x"/>
                    </swrl:DatavaluedPropertyAtom>
                </rdf:first>
            </swrl:AtomList>
        </swrl:head>
        <swrl:body>
            <swrl:AtomList>
                <rdf:first>
                    <swrl:IndividualPropertyAtom>
                        <swrl:propertyPredicate rdf:resource="&literalreification;hasSameLiteralValueOf"/>
                        <swrl:argument1 rdf:resource="urn:swrl#x"/>
                        <swrl:argument2 rdf:resource="urn:swrl#y"/>
                    </swrl:IndividualPropertyAtom>
                </rdf:first>
                <rdf:rest>
                    <swrl:AtomList>
                        <rdf:rest rdf:resource="&rdf;nil"/>
                        <rdf:first>
                            <swrl:DatavaluedPropertyAtom>
                                <swrl:propertyPredicate rdf:resource="&literalreification;hasLiteralValue"/>
                                <swrl:argument2 rdf:resource="urn:swrl#v"/>
                                <swrl:argument1 rdf:resource="urn:swrl#y"/>
                            </swrl:DatavaluedPropertyAtom>
                        </rdf:first>
                    </swrl:AtomList>
                </rdf:rest>
            </swrl:AtomList>
        </swrl:body>
    </swrl:Imp>
</rdf:RDF>



<!-- Generated by the OWL API (version 3.0.0.1469) http://owlapi.sourceforge.net -->

